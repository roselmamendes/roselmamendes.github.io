<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Blog da Roselma Mendes - Monitoramento</title><link href="https://roselmamendes.github.io/blog/" rel="alternate"></link><link href="https://roselmamendes.github.io/blog/feeds/monitoramento.atom.xml" rel="self"></link><id>https://roselmamendes.github.io/blog/</id><updated>2018-11-02T00:00:00-03:00</updated><entry><title>Logging</title><link href="https://roselmamendes.github.io/blog/tec/logging.html" rel="alternate"></link><published>2018-11-02T00:00:00-03:00</published><updated>2018-11-02T00:00:00-03:00</updated><author><name>roselmamendes</name></author><id>tag:roselmamendes.github.io,2018-11-02:/blog/tec/logging.html</id><summary type="html">&lt;p&gt;Se você não loga na sua aplicação, eu aconselho começar a faze-lo.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Toda a aplicação deveria "falar" sobre o que está acontecendo durante sua execução: quando a pessoa clica em um botão, quando alguém faz um request a uma API, quando a busca no banco gera um erro.&lt;/p&gt;
&lt;p&gt;Por isso logs existem. Para nos contar o que está acontecendo em nossas aplicações e é uma das ferramentas dentro de monitoramento de sistemas.&lt;/p&gt;
&lt;h2&gt;Logging&lt;/h2&gt;
&lt;p&gt;Se você é uma pessoa desenvolvedora, e reparar, logs fazem parte do nosso dia-a-dia, desde aqueles que geramos em nossos sistemas, desde aqueles que &lt;strong&gt;interpretamos&lt;/strong&gt; de sistemas de terceiros.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://gregoryszorc.com/blog/category/logging/"&gt;De acordo com Gregory Szorc&lt;/a&gt;, engenheiro da Mozilla, em 2012:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"(Logs são) um fluxo de mensagens distintas geradas a partir da execução de um programa."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Logs podem ser guardados em simples arquivos de texto, como .npm-log do NPM. e/ou também mostrados em terminais/consoles.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Figura mostrando a tela de um terminal com mensagens de log" src="/images/logging/example.png"&gt;&lt;/p&gt;
&lt;p&gt;A simples chamada de um print() do Python, ou system.out.println() do Java, informando o que está ocorrendo já é um log.&lt;/p&gt;
&lt;p&gt;As linguagens e frameworks geralmente possuem módulos, libs que abstraem o trabalho de criar logs, como &lt;a href="http://logging.apache.org/log4j/2.x/manual/index.html"&gt;log4j&lt;/a&gt; para Java.&lt;/p&gt;
&lt;h2&gt;Logging Estruturado&lt;/h2&gt;
&lt;p&gt;De acordo com Gregory Szorc, a informação desestruturada (puramente texto) é um problema quando queremos que uma máquina leia e interprete logs. É ok para mim ler isoladamente a mensagem abaixo:&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Roselma successfully logged in&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;Mas para um agregador de logs, o que seria o usuário e a ação que aconteceu?&lt;/p&gt;
&lt;p&gt;&lt;b&gt; Um log desestruturado&lt;/b&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; successfully logged in&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Na vida real essa mensagem estará no meio de milhares de linhas de log, que podem ter esse conjunto de palavras utilizadas em vários momentos. O que talvez não seja fácil de pesquisar no agregador da sua escolha, trazendo "ruído" nos resultados.&lt;/p&gt;
&lt;p&gt;&lt;b&gt; Já com log estruturado&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Imprimindo...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;successful_login&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;who&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Do primeiro para o segundo código nota-se maneiras diferentes de imprimir as informações. Na primeira, imprimimos uma frase. Já na segunda montamos nosso log com campos.&lt;/p&gt;
&lt;p&gt;Quando falamos de logging estruturado, precisamos que os dados de uma mensagem de log sejam montados em uma certa estrutura. &lt;/p&gt;
&lt;p&gt;Eu posso ter a mensagem de log enviada a um sistema de monitoramento da seguinte maneira:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1354317157.034534&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;INFO&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;sucessful_login&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;who&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Roselma&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;b&gt;Tá! Mas por que eu devo me importar com log estruturado afinal?&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Hoje em dia, depois de muito tempo que este post foi escrito (em 2016), a necessidade que vejo para usarmos logs estruturados é facilitar nossa vida quando usando &lt;a href="https://stackify.com/log-aggregation-101/"&gt;agregadores de logs&lt;/a&gt;. Estes agregadores tanto oferecem a busca nos logs, bem como a criação de alertas. Estes alertas podem ser criados usando uma query baseada na estrutura dos seus logs.&lt;/p&gt;
&lt;p&gt;A minha dica é: primeiro &lt;strong&gt;use um agregador de logs&lt;/strong&gt;, e então procure usar bibliotecas da sua linguagem para logs, ou entenda como seu agregador precisa ler as informações. Mas com certeza me parece a melhor opção tirar proveito das bibliotecas, que geralmente já estruturam a informação logada para usar com ferramentas de monitoramento.&lt;/p&gt;
&lt;p&gt;E mais importante: tenha logs!&lt;/p&gt;
&lt;h2&gt;O que logar?&lt;/h2&gt;
&lt;p&gt;Gregory Szorc lista o que ele acredita que sejam as situações onde logs são usados:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Registro de erros da aplicação (exceções e stack traces)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Informação em baixo nível para debug ou análise humana&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Monitoramento da aplicação (inclui métricas e alertas)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Analise de negócio (uso de dados de log para tomadas de decisão)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Auditoria de segurança&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Tem muita discussão na &lt;a href="https://www.google.com/search?hl=pt&amp;amp;q=logging%20code"&gt;rede&lt;/a&gt; acerca do que deve ser logado ou não. &lt;a href="https://blog.codinghorror.com/the-problem-with-logging/"&gt;Algumas&lt;/a&gt; pessoas só logam exceções, &lt;a href="http://stackify.com/smarter-errors-logs-putting-data-work-2/"&gt;outras&lt;/a&gt; falam de logar tudo (paramêtros das funções, funcionalidade, etc), mas com moderação.&lt;/p&gt;
&lt;p&gt;Para mim, além das dicas do Szorc, &lt;strong&gt;log tem que ter contexto&lt;/strong&gt;. Muito mais que ter um &lt;a href="http://stackoverflow.com/a/3988794"&gt;stack trace&lt;/a&gt;, tem muito valor você colocar mais informação para dar contexto de onde veio essa exceção. Por exemplo, uma mensagem do tipo "Verificando dados do usuário XPTO" junto a exceção, mostra que tipo de atividade o programa realizou quando a exceção aconteceu e o registro manipulado. &lt;/p&gt;
&lt;p&gt;E logs não só necessários quando o programa lança erros, mas também quando tudo vai bem no código. Afinal, tudo está bem em um momento e no outro não. Criar uma "timeline" do que acontece no seu sistema ajudará bastante na resolução de problemas, principalmente em produção. E os problemas podem se manifestar sem exceções em logs, como uma soma errada do total de uma nota em um site de e-commerce, por exemplo.&lt;/p&gt;
&lt;p&gt;No final a estrutura dos seus logs dependerão da natureza do seu sistema, tecnologias/frameworks e do que você espera que será útil para monitorar a sua aplicação.&lt;/p&gt;
&lt;p&gt;E para finalizar uma lista de ferramentas que ajudam com o manuseio de logs &lt;a href="http://stackshare.io/search/q=logging"&gt;no Stackshare&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.tiagomatos.com/blog/voce-sabe-o-que-e-log"&gt;Você sabe o que é Log?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://gregoryszorc.com/blog/category/logging/"&gt;Thoughts on Logging - Part 1 - Structured Logging&lt;/a&gt;&lt;/p&gt;</content><category term="auditoria"></category><category term="logs"></category><category term="log estruturado"></category></entry></feed>